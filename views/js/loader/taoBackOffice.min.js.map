{"version":3,"sources":["../tpl/tooltip!tpl","../../taoBackOfficeCss/list!css","../controller/list/index.js","../controller/routes.js","../treeRender.js","../controller/tree/view.js","onLayerEnd0.js","module-create.js"],"names":[],"mappings":"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","sourcesContent":["\ndefine('tpl!taoBackOffice/tpl/tooltip', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"tooltip-container\\\">\\n    <span class=\\\"tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <div class=\\\"tooltip-content\\\">\\n        \";\n  if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoBackOfficeCss/list',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA;\n */\ndefine('taoBackOffice/controller/list/index',[\n    'jquery',\n    'i18n',\n    'uri',\n    'util/url',\n    'ui/feedback',\n    'ui/dialog/confirm',\n    'layout/section',\n    'core/request',\n    'tpl!taoBackOffice/tpl/tooltip',\n    'ui/tooltip',\n    'css!taoBackOfficeCss/list'\n], function ($, __, Uri, urlUtil, feedback, dialogConfirm, section, request, tooltipTpl, tooltip) {\n    'use strict';\n\n    function findListContainer(uri) {\n        return $(`#list-data_${uri}`);\n    }\n\n    function clearUri(value) {\n        return value.replace(/^list-element_[0-9]+_/, '');\n    }\n\n    function createEditUriCheckbox(id) {\n        const $checkbox = $('<input>')\n            .attr('type', 'checkbox')\n            .attr('id', id)\n            .attr('data-testid', 'editUriCheckbox')\n            .change(handleEditCheckboxStateChange);\n\n        const $label = $('<label>')\n            .attr('for', id)\n            .text(__('Edit URI'))\n            .focus();\n\n        return $('<span>')\n            .addClass('lft edit-uri')\n            .append($checkbox, $label);\n    }\n\n    function createButton(title, icon, position='rgt') {\n        const $btn = $('<button>', {\n            'class': `btn-info small ${position} icon-${icon}`,\n            'data-testid': (`${icon}ElementButton`),\n            title: __(title) }\n        );\n\n        return $btn;\n    }\n\n    function transformListElement($element) {\n        return createListElement($element.attr('id'), $element.text());\n    }\n\n    function createNewListElement(elementId) {\n        return createListElement(`list-element_${elementId}_`);\n    }\n\n    function createListElement(name, value = '') {\n        const uri = Uri.decode(clearUri(name));\n        return $(`<div class='list-element'>\n            <div class='list-element'>\n                <div class='list-element__input-container'>\n                    <input type='text' name='${name}' value='${value}' data-testid='elementNameInput' data-former-value='${value}'/>\n                    <div class='list-element__input-container__uri'>\n                        <label for='uri_${name}' class='title'>URI</label>\n                        <input id='uri_${name}' type='text' name='uri_${name}' value='${uri}' data-former-value='${uri}' data-testid='elementUriInput'>\n                    </div>\n                </div>\n                <span class='icon-checkbox-crossed list-element-delete-btn' data-testid='deleteElementButton'>\n            </div>\n        </div>`);\n    }\n\n    function handleEditCheckboxStateChange() {\n        findListContainer($(this).attr('id')).toggleClass('with-uri');\n    }\n\n    function showElementsEditControls($listContainer) {\n        $listContainer.find('span.list-element')\n            .replaceWith(function () {\n                return transformListElement($(this));\n            });\n    }\n\n    function handleEditList (targetUri) {\n        const uri = getUriValue(targetUri);\n        const $listContainer = findListContainer(uri);\n        const list = $listContainer.find('ol');\n        const offset = list.children('[id^=list-element]').length;\n        const batchSize = 100;\n        let totalItems = 0;\n        let maxItems = 1000;\n\n        if($('#data-max-items').length !== 0) {\n            maxItems = parseInt($('#data-max-items').val(), 10);\n        }\n\n        function isLimitReached() {\n            return totalItems >= maxItems;\n        }\n\n        loadListElements(uri, offset, batchSize).then(newListData => {\n            extendListWithNewElements(newListData, $listContainer);\n\n            const saveUrl = urlUtil.route('saveLists', 'Lists', 'taoBackOffice');\n            const delEltUrl = urlUtil.route('removeListElement', 'Lists', 'taoBackOffice');\n            let $listForm = $listContainer.find('form');\n            const $listTitleBar = $listContainer.find('.container-title h6');\n            const $listToolBar = $listContainer.find('.data-container-footer').empty();\n            const $tooltip = $(tooltipTpl({\n                message : __('Maximum allowed number of elements is reached, you cannot add more elements. Please contact your administrator.')\n            }));\n            let $listSaveBtn;\n            let $listNewBtn;\n\n            totalItems = newListData.totalCount;\n\n            function toggleAddButton(isDisabled) {\n                $listNewBtn.attr('disabled', isDisabled);\n                $tooltip.toggleClass('tooltip-hidden', !isDisabled);\n            }\n\n            function hasChangedListItemValue(form, item) {\n                const formerValue = $('[name=\"' + item.name + '\"]', form).data('formerValue');\n                const formerURI = $('[name=\"uri_' + item.name + '\"]', form).data('formerValue');\n                const newURI = $('[name=\"uri_' + item.name + '\"]', form).val();\n\n                if (formerURI.trim() == '') {\n                    return true; // New item\n                }\n\n                return ((formerValue != item.value) || (formerURI != newURI));\n            }\n\n            function hasChangedListItemURI(form, item) {\n                const cleanName = item.name.substring(4);\n                const formerURI = $('[name=\"' + item.name + '\"]', form).data('formerValue');\n                const formerValue = $('[name=\"' + cleanName + '\"]', form).data('formerValue');\n                const newValue = $('[name=\"' + cleanName + '\"]', form).val();\n\n                if (formerURI.trim() == '') {\n                    return true; // New item\n                }\n\n                return ((formerValue != newValue) || (formerURI != item.value));\n            }\n\n            /**\n             * We should keep all data for elements whose value *or* URI has changed\n             * (that is, we send both in case either the URI or the value has changed).\n             * Therefore, this function checks also, for each input, if the associated\n             * URI (for values) or value (for URIs) has also changed to do the filtering.\n             */\n            function listItemHasChanged(form, item) {\n                if (!item.hasOwnProperty('name') || !item.hasOwnProperty('value')) {\n                    return true;\n                }\n\n                if (item.name.startsWith('list-element_')) {\n                    return hasChangedListItemValue(form, item);\n                } else if (item.name.startsWith('uri_list-element_')) {\n                    return hasChangedListItemURI(form, item);\n                }\n\n                // Always send the name and URI for the list itself (only\n                // list element inputs may be filtered out)\n                return true;\n            }\n\n            if (!$listForm.length) {\n                let nextElementId = totalItems;\n\n                $listForm = $('<form>');\n                $listContainer.wrapInner($listForm);\n                $listContainer.find('form').append(`<input type='hidden' name='uri' value='${uri}' />`);\n\n                const $labelEdit = $(`<input type='text' name='label' value='' data-testid='listNameInput' />`).val($listTitleBar.text());\n                const $listNewContainer = $('<div></div>', {'class': 'add-button-container'});\n\n                $listTitleBar.closest('.container-title').html($labelEdit);\n                $labelEdit.focus();\n\n                showElementsEditControls($listContainer);\n\n                $listSaveBtn = createButton(__('Save list'), 'save');\n                $listSaveBtn.on('click', function () {\n                    const form = $(this).closest('form');\n\n                    $.postJson(\n                        saveUrl,\n                        form.serializeArray().filter((item) => listItemHasChanged(form, item)),\n                        response => {\n                            if (response.saved) {\n                                feedback().success(__('List saved'));\n                                section.get('taoBo_list').loadContentBlock(urlUtil.route('index', 'Lists', 'taoBackOffice'));\n                            } else {\n                                const errors = (response.errors || []).length\n                                    ? `<ul><li>${response.errors.join('</li><li>')}</li></ul>`\n                                    : '';\n\n                                feedback().error(\n                                    `${__('List not saved')}${errors}`,\n                                    {encodeHtml: false}\n                                );\n                            }\n                        }\n                    );\n                    return false;\n                });\n\n                $listNewBtn = createButton('New element', 'add');\n                $listNewBtn.click(function () {\n                    const $list = $(this).closest('form').find('ol');\n\n                    totalItems = totalItems + 1;\n                    toggleAddButton(isLimitReached());\n\n                    $list.append($('<li>').append(createNewListElement(nextElementId++)))\n                         .closest('.container-content').scrollTop($list.height());\n\n                    return false;\n                });\n\n                $listNewContainer.append($listNewBtn, $tooltip);\n                $listToolBar.append($listSaveBtn, $listNewContainer, createEditUriCheckbox(uri));\n\n                tooltip.lookup($listNewContainer);\n                toggleAddButton(isLimitReached());\n            }\n\n            $listContainer.on('click', '.list-element-delete-btn', function () {\n                const $element = $(this).closest('li');\n                const $input   = $element.find('input:text');\n                const eltUri   = clearUri($input.attr('name'));\n\n                const deleteLocalElement = () => {\n                    $element.remove();\n                    totalItems = totalItems - 1;\n                    toggleAddButton(isLimitReached());\n                    feedback().success(__('Element deleted'));\n                };\n\n                const deleteServerAndLocalElement = () => {\n                    $.postJson(\n                        delEltUrl,\n                        { uri : eltUri },\n                        response => {\n                            if (response.deleted) {\n                                deleteLocalElement();\n                            } else {\n                                feedback().error(__('Element not deleted'));\n                            }\n                        }\n                    );\n                };\n\n                const deleteElement = () => {\n                    if (eltUri) {\n                        deleteServerAndLocalElement();\n                    } else {\n                        deleteLocalElement();\n                    }\n                };\n\n                if ($input.val() === '') {\n                    deleteElement();\n                } else {\n                    dialogConfirm(\n                        __('Please confirm you want to delete this list element.'),\n                        deleteElement\n                    );\n                }\n            });\n        });\n    }\n\n    function handleCreateList($form) {\n        const isRemoteListCreation = ($form.attr('action') || '').includes('remote');\n\n        request({\n            url: isRemoteListCreation\n                ? urlUtil.route('remote', 'Lists', 'taoBackOffice')\n                : urlUtil.route('index', 'Lists', 'taoBackOffice'),\n            method: 'POST',\n            data: isRemoteListCreation\n                ? $form.serialize()\n                : null,\n        }).then(response => {\n            response.data.uri = Uri.encode(response.data.uri);\n            addNewList(response.data, isRemoteListCreation);\n        }).catch(function(err) {\n            feedback().error(err.response.message || err);\n        });\n    }\n\n    function addNewList(newList, isRemoteList) {\n        const $newListContainer = createListContainer(newList, isRemoteList);\n        addHandlerListeners($newListContainer);\n\n        const containerIdentifier = isRemoteList ? '#panel-taoBo_remotelist' : '#panel-taoBo_list';\n        $(`${containerIdentifier} .data-container-wrapper`).append($newListContainer);\n\n        if (!isRemoteList) {\n            handleEditList(newList.uri);\n        }\n    }\n\n    function handleDeleteList() {\n        const delListUrl = urlUtil.route('removeList', 'Lists', 'taoBackOffice');\n        const $btn  = $(this);\n\n        dialogConfirm(\n            __('Please confirm you want to delete this list. This operation cannot be undone.'),\n            function accept() {\n                const uri   = $btn.data('uri');\n                const $list = $btn.parents('.data-container');\n                $.postJson(\n                    delListUrl,\n                    { uri },\n                    response => {\n                        if (response.deleted) {\n                            feedback().success(__('List deleted'));\n                            $list.remove();\n                        } else {\n                            feedback().error(__('List not deleted'));\n                        }\n                    }\n                );\n            }\n        );\n    }\n\n    function handleReloadList() {\n        const reloadListUrl = urlUtil.route('reloadRemoteList', 'Lists', 'taoBackOffice');\n        const uri = $(this).data('uri');\n\n        $.postJson(\n            reloadListUrl,\n            { uri },\n            response => {\n                if (response.saved) {\n                    feedback().success(__('List reloaded'));\n                    section.get('taoBo_remotelist').loadContentBlock(urlUtil.route('remote', 'Lists', 'taoBackOffice'));\n                } else {\n                    feedback().error(response.message || __('List failed to be reloaded'));\n                }\n            }\n        );\n    }\n\n    function addHandlerListeners($listContainer) {\n        $listContainer.on('click', '.list-edit-btn', handleEditList);\n        $listContainer.on('click', '.list-delete-btn', handleDeleteList);\n        $listContainer.on('click', '.list-reload-btn', handleReloadList);\n    }\n\n    function createListContainer(newList, isRemoteList) {\n        return $(\n            `<section id=\"list-data_${newList.uri}\" class=\"data-container list-container\">\n                <header class=\"container-title\">\n                    <h6>${newList.label}</h6>\n                </header>\n                <div class=\"container-content\" id=\"list-elements_${newList.uri}\">\n                    ${renderListElements(newList, isRemoteList)}\n                </div>\n                <footer class=\"data-container-footer action-bar\">\n                    <button\n                        type=\"button\"\n                        title=\"${isRemoteList ? __('Reload this list') : __('Edit this list')}\"\n                        class=\"icon-reload ${isRemoteList ? 'list-reload-btn' : 'list-edit-btn'} btn-info small rgt\"\n                        data-uri=\"${newList.uri}\"\n                    ></button>\n                    <button\n                        type=\"button\"\n                        title=\"${__('Delete this list')}\"\n                        class=\"icon-bin list-delete-btn btn-warning small rgt\"\n                        data-uri=\"${newList.uri}\"\n                    ></button>\n                </footer>\n            </section>`\n        );\n    }\n\n    function renderListElements(newList, isRemoteList) {\n        let list = newList.elements.map((element, index) => {\n            return renderListElement(index, element.uri, element.label);\n        });\n\n        if (isRemoteList && newList.totalCount > newList.elements.length) {\n            const newElementIndex = newList.elements.length + 1;\n\n            list.push(renderListElement(newElementIndex, '', '...'));\n        }\n\n        return `<ol data-testid=\"elements\">${list.join('')}</ol>`;\n    }\n\n    function renderListElement(index, uri, label) {\n        return `<li id=\"list-element_${index}\">\n            <span class=\"list-element\" id=\"list-element_${index}_${Uri.encode(uri)}\">${label}</span>\n        </li>`;\n    }\n\n    function getUriValue(targetUri) {\n        if (typeof targetUri === 'string') {\n            return targetUri;\n        } else if (targetUri.currentTarget){\n            return $(targetUri.currentTarget).data('uri');\n        }\n    }\n\n    /**\n     * Requests new set of list elements and extends DOM list with them\n     */\n    function handleLoadMore() {\n        const $btn  = $(this);\n        const listUri   = getUriValue($btn.data('uri'));\n        const $listContainer = findListContainer(listUri);\n        const offset = $listContainer.find('ol').children('[id^=list-element]').length;\n        $btn.find('a').text('Loading...');\n        $btn.find('.icon-loop').toggleClass('rotate');\n        loadListElements(listUri, offset).then(newListData => {\n            $btn.find('a').text('Load more');\n            $btn.find('.icon-loop').toggleClass('rotate');\n            extendListWithNewElements(newListData, $listContainer, listUri);\n\n            if ($listContainer.find('form').length) {\n                showElementsEditControls($listContainer);\n            }\n        });\n    }\n\n    /**\n     * Loads a set of list elements\n     * @param {string} listUri - list uri\n     * @param {number} offset - element index to retrieve elements from\n     * @param {number} limit - number of list element to get (0 is no limit)\n     * @returns {Promise}\n     */\n    function loadListElements(listUri, offset, limit) {\n        const loadMoreUrl = urlUtil.route('getListElements', 'Lists', 'taoBackOffice');\n\n        const res = new Promise(resolve => {\n            $.getJSON(\n                loadMoreUrl,\n                { listUri, offset, limit },\n                response => {\n                    resolve(response.data);\n                }\n            );\n        });\n        return res;\n    }\n\n    /**\n     * Extends list node with new elements and hides pagination container if all elements are loaded\n     * @param {Object} param0\n     * @param {Object} [param0.elements] - new elements to include on list node\n     * @param {Object} [param0.totalCount] - total number of list elements\n     * @param {Object} listContainer - Jquery listContainer node\n     */\n    function extendListWithNewElements({elements, totalCount}, listContainer) {\n        const $list = listContainer.find('ol');\n        let offset = $list.children('[id^=list-element]').length;\n        let buffer = '';\n\n        for (let i = 0, id = '', len = elements.length; i < len; i++) {\n            id = `list-element_${offset++}_`;\n            buffer += `<li id=${id}><span class='list-element' id='${id}${elements[i].uri}'>${elements[i].label}</span></li>`;\n        }\n\n        $list.append(buffer).closest('.container-content').scrollTop($list.height());\n\n        if (offset === totalCount) {\n            listContainer.find('.pagination-container').hide();\n        }\n    }\n\n    return {\n        // The list controller entrypoint\n        start() {\n            $('.form-submitter').off('click').on('click', (e => {\n                e.preventDefault();\n\n                handleCreateList($(e.target).closest('form'));\n            }));\n\n            $('.list-edit-btn').click(handleEditList);\n            $('.list-delete-btn').click(handleDeleteList);\n            $('.list-reload-btn').click(handleReloadList);\n            $('.load-more-btn').click(handleLoadMore);\n        }\n    };\n});\n\n","define('taoBackOffice/controller/routes',[],function () {\n    'use strict';\n\n    return {\n        'Lists' : {\n            'actions' : {\n                'index' : 'controller/list/index',\n                'remote' : 'controller/list/index'\n            }\n        },\n        'Trees': {\n            'actions': {\n                'viewTree': 'controller/tree/view'\n            }\n        }\n    };\n});\n\n","define('taoBackOffice/treeRender',[\n    'jquery',\n    'lodash',\n    'taoBackOffice/lib/vis/vis',\n    'css!taoBackOffice/lib/vis/vis'\n], function ($, _, vis) {\n    'use strict';\n\n    var network = null;\n    var treeContainer = null;\n    var settings = null;\n    var data = null;\n\n    /**\n     * @private\n     */\n    function destroy() {\n        if (network !== null) {\n            network.destroy();\n            network = null;\n        }\n    }\n\n    var treeRender = {\n\n        /**\n         *\n         * @param {Element} container\n         * @param {Object} [treeData]\n         * @param {Object} [options]\n         */\n        init: function (container, treeData, options) {\n\n            if (!container instanceof Element) {\n                throw new TypeError(\"tree container must be specified\");\n            }\n\n            treeContainer = container;\n            options = options || {};\n            treeData = treeData || {nodes: [], edges: []};\n\n\n            settings = {\n                layout: {\n                    hierarchical: {\n                        sortMethod: 'directed',\n                        \"levelSeparation\": 200\n                    }\n                },\n                nodes: {\n                    shape: 'box',\n                    \"color\": {\n                        \"border\": \"#222\",\n                        \"background\": \"#f2f0ee\",\n\n                        \"highlight\": {\n                            \"border\": \"#222\",\n                            \"background\": \"#f2f0ee\"\n                        }\n                    },\n\n                    \"font\": {\n                        \"face\": \"'Franklin Gothic', 'Franklin Gothic Medium', 'Source Sans Pro', sans-serif\",\n                        \"color\": \"#222\"\n                    }\n\n                },\n                edges: {\n                    smooth: false,\n                    width: 0.2,\n                    color: {\n                        color: \"#222\"\n                    },\n                    arrows: {to: true},\n                    \"physics\": false,\n                    \"scaling\": {\n                        \"label\": false\n                    }\n                }\n            };\n\n            $.extend(settings, options);\n\n            // create a network\n            data = {\n                nodes: treeData.nodes ? treeData.nodes : [],\n                edges: treeData.edges ? treeData.edges : []\n            };\n\n        },\n\n        run: function () {\n            destroy();\n\n            network = new vis.Network(treeContainer, data, settings);\n\n            network.once('initRedraw', function () {\n\n                if (data.nodes.length > 100) {\n                    network.setOptions($.extend(settings, {\n                        physics: {\n                            hierarchicalRepulsion: {\n                                nodeDistance: 200\n                            },\n                            stabilization: {\n                                fit: false\n                            }\n                        }\n                    }));\n\n                    network.fit({\n                        nodes: [data.nodes[0].id, data.nodes[1].id], animation: {\n                            duration: 400,\n                            easingFunction: 'linear'\n                        }\n                    });\n                }\n\n            });\n        }\n    };\n\n    return treeRender;\n});\n\n","define('taoBackOffice/controller/tree/view',[\n    'layout/actions/binder',\n    'uri',\n    'jquery',\n    'context',\n    'helpers',\n    'taoBackOffice/treeRender'\n], function (binder, uri, $, context, helpers, treeRender) {\n    'use strict';\n\n    /**\n     *\n     * @type {{start: Function}}\n     */\n    var itemRunnerController = {\n\n        //the controller initialization\n        start: function () {\n        \t\n        \t$('.tree-container').each(function(i, obj) {\n        \t\tvar $container = $(obj);\n                var uri = $container.data('id');\n\n                $.post(helpers._url('getTree', 'Trees', 'taoBackOffice'), {uri: uri}, function (treeData) {\n\n                    var $parent = $container.closest('.content-block');\n\n                    var resizeContainer = function () {\n                        $container.height($parent.height() - $parent.find('.panel').eq(0).outerHeight());\n                        $container.width($parent.width());\n                    };\n\n                    $(window).on('resize', resizeContainer);\n\n                    resizeContainer();\n                    treeRender.init($container[0], treeData);\n                    treeRender.run();\n\n                });\n        \t});\n        }\n    };\n\n    // the controller is exposed\n    return itemRunnerController;\n});\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('@keyframes rota{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.list-container .container-content .list-element{display:flex;width:100%}.list-container .container-content .list-element-delete-btn{font-size:2em;cursor:pointer;margin-left:4px}.list-container .container-content .list-element__input-container{flex:1}.list-container .container-content .list-element__input-container__uri{display:none;align-items:center;margin-top:2px;margin-bottom:10px;background:#e1e2e3}.list-container .container-content .list-element .title{color:#222;border:1px #ccc solid;border-top-left-radius:2px;border-bottom-left-radius:2px;margin:0;padding:3px}.list-container .container-content .list-element .title ~ input{border-top-left-radius:0;border-bottom-left-radius:0;border-left:none}.list-container .container-content .list-element input{width:100%}.list-container .add-button-container{display:block;float:right;position:relative}.list-container .add-button-container .tooltip-container{width:100%;height:100%;position:absolute}.list-container .add-button-container .tooltip-hidden{display:none}.list-container .add-button-container .tooltipstered{display:block;width:100%;height:100%}.list-container .edit-uri{display:flex;color:initial;font-family:\\\"Source Sans Pro\\\",sans-serif}.section-container .content-block .data-container-wrapper .list-container form{background-color:#f3f1ef}.section-container .content-block .data-container-wrapper .list-container form .data-container-footer{border-top:0 !important}.with-uri .container-content .list-element__input-container__uri{display:flex}.container-content .pagination-container{display:flex;justify-content:space-between;padding:0 5px}.container-content .pagination-container>span{color:#838383}.container-content .pagination-container .icon-loop{display:inline-block;color:#3e7da7;font-size:1.25rem;margin-right:5px}.container-content .pagination-container .rotate{animation:rota 4s linear infinite}.create-list-wrapper{display:flex}.create-list-wrapper #createList{background:none;border:0;padding:0}.create-list-wrapper .form-toolbar{margin:10px 0 50px 0}\\n\\n/*# sourceMappingURL=../../../taoBackOffice/views/jsCss/list.css.map */');\n","\ndefine(\"taoBackOffice/loader/taoBackOffice.bundle\", function(){});\n"]}